<template>
  <scroll scroll-y="{{true}}" class="scrool-page" bounces="{{true}}">
    <div class="page">
      
      <!-- 标题和时间 -->
      <div class="header">
        <text class="time">{{hours}}:{{minute}}</text>
        <text class="title">进制转换</text>
      </div>
      
      <!-- 展示四种进制 -->

      <div class="card" onclick="toEdit(2)">
        <text class="sectionTitle">二进制</text>
        <text class="number">{{numbers.n_2}}</text>
      </div>
      
      <div class="card" onclick="toEdit(8)">
        <text class="sectionTitle">八进制</text>
        <text class="number">{{numbers.n_8}}</text>
      </div>

      <div class="card" onclick="toEdit(10)">
        <text class="sectionTitle">十进制</text>
        <text class="number">{{numbers.n_10}}</text>
      </div>

      <div class="card" onclick="toEdit(16)">
        <text class="sectionTitle">十六进制</text>
        <text class="number">{{numbers.n_16}}</text>
      </div>

      <div class="toZero" onclick="toZero">
        <text>归零</text>
      </div>

      <!-- “关于”按钮 -->
      <div class="about" onclick="about">
        <text>i</text>
      </div>
    </div>
  </scroll>
</template>

<script>
import router from '@system.router'
import prompt from '@system.prompt'
import vibrator from '@system.vibrator'

export default {
  private: {
    // 时间
    hours: 0,
    minute: 0,

    // 当前数值（十进制）
    number: 0,

    // 当前数值的各种进制
    numbers: {
      n_2: 0,
      n_8: 0,
      n_10: 0,
      n_16: 0
    },

    // 准备归零
    perpareToZero: false,

    // 时间刷新计时器ID
    intervalId: null
  },

  // 刷新时间
  refreshTime() {
    let time = new Date()
    this.hours = time.getHours()
    let minute = time.getMinutes()
    if (minute < 10) {
      this.minute = '0' + minute
    } else {
      this.minute = minute
    }
    if (time.getSeconds == 0) {
      global.runGC()
    }
  },

  // 刷新用于展示的数值
  refreshConvertNumber() {

    // 用于四位分隔的函数
    function split(text) {
      let r = ''
      let n = text.length
      for (let i = 0; i < n; i++) {
        r += text[i]
        if ((n - i - 1) % 4 == 0 && n - i != 0) {
          r += ' '
        }
      }
      return r
    }

    // 进制转换
    this.numbers.n_2 = split(this.number.toString(2))
    this.numbers.n_8 = split(this.number.toString(8))
    this.numbers.n_10 = split(this.number.toString(10))
    this.numbers.n_16 = split(this.number.toString(16)).toUpperCase()

    split = null
  },

  // 设置时间刷新定时器
  onReady() {
    this.refreshTime()
    this.intervalId = setInterval(() => {
      this.refreshTime()
    }, 1000)
  },

  // 读取数值
  onShow() {
    this.number = this.$app.$def.data.number
    this.refreshConvertNumber()
    global.runGC()
  },

  // 进入编辑页面
  toEdit (base) {
    this.$app.$def.data.number = this.number
    router.push({
      uri: "/pages/edit_" + base
    })
  },


  // 归零
  toZero () {
    vibrator.vibrate({
      mode: 'short'
    })

    if (this.perpareToZero) {

      this.$app.$def.data.number = 0
      this.number = 0
      this.refreshConvertNumber()

    } else {

      this.perpareToZero = true
      prompt.showToast({
        message: '再次点击确认',
        duration: 2000
      })

      setTimeout(() => {
        this.perpareToZero = false
     }, 2000)

    }
  },

  about () {
    router.push({
      uri: "/pages/about"
    })
  },

  // 销毁定时器
  onDestroy() {
    clearInterval(this.intervalId)
  }
}
</script>

<style>

.scrool-page {
  width: 192px;
  height: 490px;
}

.page {
  flex-direction: column;
  width: 192px;
  height: 800px;
  margin: 0;
  padding: 0;
  padding-bottom: 10px;
}

.header {
  width: 192px;
  flex-direction: column;
  align-items: center;
  padding-top: 20px;
}

.time {
  font-size: 20px;
  color: #eeeeee;
}

.title {
  font-size: 25px;
  /* color: #ff9837; */
}

.card {
  width: 192px;
  background-color: #222222;
  margin: 7px 0;
  padding: 10px;
  border-radius: 10px;
  flex-direction: column;
}

.sectionTitle {
  font-size: 25px;
}

.number {
  font-size: 20px;
  margin-top: 10px;
}

.toZero {
  margin: 10px 0 5px 56px;
  width: 80px;
  height: 54px;
  padding: 8px;
  border-radius: 50%; 
  background-color: #FF8210;
  align-items: center;
  justify-content: center;
}

.about {
  margin-left: 73.5px;
  margin-top: 10px;
  width: 45px;
  height: 45px;
  font-size: 20px;
  background-color: #525252;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  border-radius: 50%;
}

.about text {
  font-size: 25px;
}

</style>
