<template>
  <scroll class="page">
    <div class="header">
      <text class="time">{{hours}}:{{minute}}</text>
      <text class="title">进制转换</text>
    </div>
    
    <div class="card" onclick="toEdit(2)">
      <text class="sectionTitle">二进制</text>
      <text class="number">{{numbers.n_2}}</text>
    </div>
    
    <div class="card" onclick="toEdit(8)">
      <text class="sectionTitle">八进制</text>
      <text class="number">{{numbers.n_8}}</text>
    </div>

    <div class="card" onclick="toEdit(10)">
      <text class="sectionTitle">十进制</text>
      <text class="number">{{numbers.n_10}}</text>
    </div>

    <div class="card" onclick="toEdit()">
      <text class="sectionTitle">十六进制</text>
      <text class="number">{{numbers.n_16}}</text>
    </div>

    <div class="about">
      <text>i</text>
    </div>
  </scroll>
</template>

<script>
import router from '@system.router'

export default {
  // 页面级组件的数据模型，影响传入数据的覆盖机制：private内定义的属性不允许被覆盖
  private: {
    hours: 0,
    minute: 0,
    number: 0,
    numbers: {
      n_2: 0,
      n_8: 0,
      n_10: 0,
      n_16: 0
    }
  },

  routeList() {
    // 跳转到应用内的某个页面，router用法详见：文档->接口->页面路由
    router.replace({
      uri: '/pages/list'
    })
  },

  refreshTime() {
    let time = new Date()
    this.hours = time.getHours()
    let minute = time.getMinutes()
    if (minute < 10) {
      this.minute = '0' + minute
    } else {
      this.minute = minute
    }
    time = null
  },

  refreshConvertNumber() {

    function split(text) {
      let r = ''
      let n = text.length
      for (let i = 0; i < n; i++) {
        r += text[i]
        if ((n - i - 1) % 4 == 0 && n - i != 0) {
          r += ' '
        }
      }
      return r
    }

    this.numbers.n_2 = split(this.number.toString(2))
    this.numbers.n_8 = split(this.number.toString(8))
    this.numbers.n_10 = split(this.number.toString(10))
    this.numbers.n_16 = split(this.number.toString(16)).toUpperCase()

    split = null
  },

  onReady() {
    this.refreshTime()
    this.refreshConvertNumber()
    setInterval(() => {
      this.refreshTime()
    }, 1000)
  },

  onShow() {
    this.number = this.$app.$def.data.number
    this.refreshConvertNumber()
  },

  toEdit (base) {
    this.$app.$def.data.number = this.number
    router.push({
      uri: "/pages/edit_" + base
    })
  },

}
</script>

<style>

.page {
  flex-direction: column;
  width: 192;
  /* height: 490; */
  margin: 0;
  padding: 0;
  padding-bottom: 10px;
}

.header {
  width: 192px;
  flex-direction: column;
  align-items: center;
  padding-top: 20px;
}

.time {
  font-size: 20px;
  color: #eeeeee;
}

.title {
  font-size: 25px;
  /* color: #ff9837; */
}

.card {
  width: 192px;
  /* height: 200px; */
  background-color: #222222;
  margin: 7px 0;
  padding: 10px;
  border-radius: 10px;
  flex-direction: column;
}

.sectionTitle {
  font-size: 25px;
}

.number {
  font-size: 20px;
  margin-top: 10px;
}

.about {
  margin-left: 78.5px;
  margin-top: 10px;
  width: 35px;
  height: 35px;
  font-size: 20px;
  background-color: #525252;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  border-radius: 50%;
}

.about text {
  font-size: 25px;
}

.cardHeader {
  flex-direction: row;
  justify-content: space-between;
}

</style>
